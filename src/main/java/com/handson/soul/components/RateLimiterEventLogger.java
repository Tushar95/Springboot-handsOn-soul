package com.handson.soul.components;import io.github.resilience4j.ratelimiter.RateLimiter;import io.github.resilience4j.ratelimiter.RateLimiterRegistry;import jakarta.annotation.PostConstruct;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;@Componentpublic class RateLimiterEventLogger {    private final RateLimiterRegistry registry;    @Autowired    public RateLimiterEventLogger(RateLimiterRegistry registry) {        this.registry = registry;    }    @PostConstruct    public void init() {        // Force creation of rate limiters        registry.rateLimiter("limitedService");        registry.getAllRateLimiters().forEach(rateLimiter ->                rateLimiter.getEventPublisher()                        .onSuccess(event -> System.out.println("SUCCESS: " + event))                        .onFailure(event -> System.out.println("FAILURE: " + event))        );    }}