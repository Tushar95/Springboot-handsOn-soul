package com.handson.soul.components;import io.github.resilience4j.circuitbreaker.CircuitBreaker;import io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;@Componentpublic class CircuitBreakerInspectorComponent {    private final CircuitBreakerRegistry registry;    @Autowired    public CircuitBreakerInspectorComponent(CircuitBreakerRegistry registry) {        this.registry = registry;    }    public void checkState() {        CircuitBreaker cb = registry.circuitBreaker("myService");        System.out.println("State: " + cb.getState());    }    public void logMetrics() {        CircuitBreaker cb = registry.circuitBreaker("myService");        CircuitBreaker.Metrics metrics = cb.getMetrics();        System.out.println("Failure rate: " + metrics.getFailureRate());        System.out.println("Number of failed calls: " + metrics.getNumberOfFailedCalls());        System.out.println("Number of successful calls: " + metrics.getNumberOfSuccessfulCalls());        System.out.println("Number of slow calls: " + metrics.getNumberOfSlowCalls());    }}